'use strict';
/*
1. Объясните почему код даёт именно такие результаты?
*/
/*
1. Инкремент префиксной формы сначала увеличит a на 1, а потом запишет a в c.
2. a = 2, c = 2
*/
//пример 1
let a = 1,
    b = 1,
    c, d;
c = ++a;
alert(c); // ответ: 2
/*
1. Инкремент постфиксной формы сначала запишет b в d, а потом увеличит b на 1.
2. b = 2, d = 1
*/
//пример 2
d = b++;
alert(d); //ответ: 1
/*
1. Инкремент префиксной формы сначала увеличит a на 1, а потом прибавит a к 2 в c.
2. a = 3, c = 5 
*/
//пример 3
c = 2 + ++a;
alert(c); //ответ: 5
/*
1. Инкремент постфиксной формы сначала прибавит b к 2, а потом увеличит b на 1.
2. b = 3, d = 4
*/
//пример 4
d = 2 + b++;
alert(d); //ответ: 4
alert(a); //3
alert(b); //3

/*
2. Чему будут равны переменные x и a в примере ниже? Написать почему так произошло 
*/
/*
1. Первым выполнится часть в скобках, и a = a*2(2*2)
2. Вторым 1 прибавится к a(4)
3. a = 4, x = 5
*/
a = 2;
let x = 1 + (a *= 2);

/*
3. Объявить две переменные a и b и задать им целочисленные произвольные начальные
значения.
Затем написать скрипт, который работает по следующему принципу:
- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
- если а и b отрицательные, вывести их произведение;
- если а и b разных знаков, вывести их сумму;
*/

a = +prompt("введите первое число");
b = +prompt("введите второе число");

if (a >= 0 && b >= 0) {
    alert(a - b)
} else if (a < 0 && b < 0) {
    alert(a * b)
} else {
    alert(a + b)
}

/*
4. Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя
параметрами. Т.е. например, функция для сложения должна принимать два числа, складывать их
и возвращать результат.
Обязательно использовать оператор return.
*/
/**
 * Функция суммирует два числа
 * @param {Number} Num1 первое слагаемое
 * @param {Number} Num2 второе слагаемое
 * @returns {Number}
 */
function sumNumber(Num1, Num2) {
    return Num1 + Num2
}
/**
 * Функция вычитает из первого числа второе
 * @param {Number} Num1 Уменьшаемое число
 * @param {Number} Num2 Вычитаемое число
 * @returns {Number}
 */
function subtractNumber(Num1, Num2) {
    return Num1 - Num2
}
/**
 * Функция перемножает числа
 * @param {Number} Num1 Первый множитель
 * @param {Number} Num2 Второй множитель
 * @returns {Number}
 */
function multiplyNumber(Num1, Num2) {
    return Num1 * Num2
}
/**
 * Функция делит первое число на второе
 * @param {Number} Num1 Делимое число
 * @param {Number} Num2 Делитель
 * @returns {Number}
 */
function divideNumber(Num1, Num2) {
    return Num1 / Num2
}

/*
5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от
переданного значения операции (использовать switch) выполнить одну из арифметических
операций
(использовать функции из задания 4) и вернуть полученное значение.
*/

/**
 * Функция в зависимости от переданного значения операции выполнить одну из арифметических операций
 * @param {Number} arg1 Первое число
 * @param {Number} arg2 Второе число
 * @param {String} operation принимает только - + - * /
 * @returns 
 */
function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case '+':
            return sumNumber(arg1, arg2)
        case '-':
            return subtractNumber(arg1, arg2)
        case '*':
            return multiplyNumber(arg1, arg2)
        case '-':
            return divideNumber(arg1, arg2)
    }
}

alert(mathOperation(2, 3, '-'));

/*
6. Программа должна спросить у пользователя число, это будет количество денег, которое он хочет
положить на счет в банке. Затем программа должна выдать примерно такое сообщение:
"Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101.
"Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020.
"Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
То есть ваша задача выводить слово «рубль» в правильном падеже, в зависимости от введенного
числа.
*/

let money = prompt('Введите количество рублей, которые вы хотите положить на счёт.');

// рублей - 11,12,13,14,*5,*6,*7,*8,*9,*0
// рубль - *1
// рубля - *2, *3, *4
/**
 * Функция выводит слова рубля/рублей/рубль в зависимости от введённого числа
 * @param {String} num Число для склонения
 * @returns {String} Число + рубля/рублей/рубль
 */
function declension(num) {
    switch (num.slice(-1)) {
        case '1':
            if (num.slice(-2, -1) == '1') {
                return money + ' рублей'
            } else {
                return money + ' рубль'
            }
        case '2':
        case '3':
        case '4':
            if (num.slice(-2, -1) == '1') {
                return money + ' рублей'
            } else {
                return money + ' рубля'
            }
        case '5':
        case '6':
        case '7':
        case '8':
        case '9':
        case '0':
            return money + ' рублей'
    }
}

alert(`Ваша сумма в ${declension(money)} успешно зачислена.`)